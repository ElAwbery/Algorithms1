{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf0 \expnd0\expndtw0\kerning0
\ul \ulc0 Exhaustive enumeration:\
\ulnone \
The general pattern for enumeration is:\
for x in range\'85\
	for y in range\'85\
		for z in range\'85\
\
\ul Unordered pairs:\
\ulnone An unordered pair is a combination. That means the order of the pair (a, b) doesn\'92t matter, it is considered equal as (b, a) or (a, b)\
\
To enumerate unordered pairs means to omit pair permutations that are equal as combinations. It\'92s a \'93triangular enumeration of combinations\'94. \
\
\
def unordered_pairs(list):\
   result = []\
   sublist = list\
   for first in list:\
       sublist = sublist[1:]\
       for second in sublist:\
           pair = (first, second)\
           result.append(pair)\
   return result\
\
unordered_pairs(['a', 'b', 'c', 'd', 'e'])\
Out[10]: \
[('a', 'b'),\
('a', 'c'),\
('a', 'd'),\
('a', 'e'),\
('b', 'c'),\
('b', 'd'),\
('b', 'e'),\
('c', 'd'),\
('c', 'e'),\
('d', 'e')]}